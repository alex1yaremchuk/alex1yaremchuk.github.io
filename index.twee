:: StoryTitle
Бадминтон. Питер.


:: StoryData
{
  "ifid": "B6C03AF5-4180-4B4C-9D4A-321F6E4D4234",
  "format": "SugarCube",
  "format-version": "2.37.3",
  "start": "Дом",
  "tag-colors": {
    "mzh-start": "yellow"
  },
  "zoom": 1
}

:: StoryInit

<<run Config.saves.autosave = true>>
<<run Config.saves.autoload = true>>

<<if !$player>>
  <<set $player = {
    "name": "Alice",
    "technique": 5,
    "mind": 6,
    "physique": 5,
    "emotion": 5,
    "serve": 4
  }>>
<</if>>

<<if !$opponent>>
  <<set $opponent = {
    "name": "Bob",
    "technique": 6,
    "mind": 5,
    "physique": 6,
    "emotion": 5,
    "serve": 4
  }>>
<</if>>

<<if !$time>>
  <<set $time = 5>>
<</if>>

/* <<script>>
// console.log("STORY INIT — player?", typeof $player, $player);
// console.log("AUTOSAVE RAW", localStorage.getItem("Twine.autosave"));
<</script>> */

:: Header [header] {"position":"475,25","size":"100,100"}
(text-colour:(hsl:60,0.8039,0.5,0.55))[
<table>
<tr><td>Время: </td><td>Год 1 из 10</td>   
		<td>Подача-прием: </td><td>1 из 10</td>
</tr>
<tr><td>Здоровье: </td><td>1 из 10</td>
		<td>Смеш: </td><td>1 из 10</td>
</tr>
<tr><td>Настрой: </td><td>Сверну горы</td>
		<td>Теория: </td><td>1 из 10</td>
</tr>
</table>

]

:: Додзё {"position":"925,150","size":"100,100"}
  <div class="config">
    <div class="players">
      <div class="player">
        ''Игрок''
        <table class="inputs">
          <tr><td>Имя</td><td><<textbox "$player.name" $player.name>></td></tr>
          <tr><td>Тех</td><td><<numberbox "$player.technique" $player.technique>></td></tr>
          <tr><td>Опт</td><td><<numberbox "$player.mind" $player.mind>></td></tr>
          <tr><td>Физ</td><td><<numberbox "$player.physique" $player.physique>></td></tr>
          <tr><td>Эмо</td><td><<numberbox "$player.emotion" $player.emotion>></td></tr>
          <tr><td>Под</td><td><<numberbox "$player.serve" $player.serve>></td></tr>
        </table>
      </div>
      <div class="player">
        ''Соперник''
        <table class="inputs">
          <tr><td>Имя</td><td><<textbox "$opponent.name" $opponent.name>></td></tr>
          <tr><td>Тех</td><td><<numberbox "$opponent.technique" $opponent.technique>></td></tr>
          <tr><td>Опт</td><td><<numberbox "$opponent.mind" $opponent.mind>></td></tr>
          <tr><td>Физ</td><td><<numberbox "$opponent.physique" $opponent.physique>></td></tr>
          <tr><td>Эмо</td><td><<numberbox "$opponent.emotion" $opponent.emotion>></td></tr>
          <tr><td>Под</td><td><<numberbox "$opponent.serve" $opponent.serve>></td></tr>
        </table>
      </div>
      <div class="checks">
        <label><<checkbox "$logMatch" false true autocheck>> Матч</label>
        <label><<checkbox "$logGame" false true autocheck>> Гейм</label>
        <label><<checkbox "$logRally" false true autocheck>> Розыгрыш</label>
        <label><<checkbox "$logRallyDetailed" false true autocheck>> Подробно</label>
        <label><<checkbox "$logDebug" false true autocheck>> Отладка</label>
      </div>
    </div>
    <<button "Запустить матч">>
    <<run runMatch()>>
    <</button>>
  </div>
<div class="output">
  <<if $winner>>
  Победитель: <<= $winner>>
  <</if>>
  <<if $htmlLog>>
  <div class="log"><<= $htmlLog>></div>
  <</if>>
</div>

:: Дом
Время: <<= $time>>
<<if $time > 0>>
* [[У Палыча]]
* [[Сидоров]]
* [[Антон Иванов]]
* [[Дмитрий Дубовенко]]
<</if>>
[[Додзё]]
[[Турнир]]

:: У Палыча
<<set $player.physique += 1>>
<<set $time -= 1>>
Тренировка у Палыча усилила твою Физуху.
[[Дом]]

:: Сидоров
<<set $player.technique += 1>>
<<set $time -= 1>>
Сидоров помог улучшить Технику.
[[Дом]]

:: Антон Иванов
<<set $player.mind += 1>>
<<set $time -= 1>>
Ты стал умнее после беседы с Антоном Ивановым.
[[Дом]]

:: Дмитрий Дубовенко
<<set $player.emotion += 1>>
<<set $time -= 1>>
Дмитрий поднял твои Эмоции.
[[Дом]]

:: Турнир
[[Раунд 1|Раунд1]]

:: Раунд1
<<set $opponent = generateOpponent(8)>>
Матч первого раунда.
<<button "Играть">><<run runMatch()>><</button>>
<<if $winner>> Победитель: <<= $winner>> <</if>>
[[Следующий|Раунд2]]

:: Раунд2
<<set $opponent = generateOpponent(16)>>
Матч второго раунда.
<<button "Играть">><<run runMatch()>><</button>>
<<if $winner>> Победитель: <<= $winner>> <</if>>
[[Далее|Раунд3]]

:: Раунд3
<<set $opponent = generateOpponent(24)>>
Третий раунд турнира.
<<button "Играть">><<run runMatch()>><</button>>
<<if $winner>> Победитель: <<= $winner>> <</if>>
[[Финал|Раунд4]]

:: Раунд4
<<set $opponent = generateOpponent(32)>>
Финальный матч турнира.
<<button "Играть">><<run runMatch()>><</button>>
<<if $winner>> Победитель: <<= $winner>> <</if>>
[[Дом]]





:: StoryScript [script]
var s = document.createElement("script");
s.src = "engine.js";
s.defer = true;
document.head.appendChild(s);

window.runMatch = function () {
  const levels = new Set();
  if (State.variables.logMatch) levels.add("match");
  if (State.variables.logGame) levels.add("game");
  if (State.variables.logRally) levels.add("rally");
  if (State.variables.logRallyDetailed) levels.add("rallyDetailed");
  if (State.variables.logDebug) levels.add("debug");

  const logger = new window.engine.HtmlLogger(levels, "ru");

  const playerA = Object.assign({}, State.variables.player);
  const playerB = Object.assign({}, State.variables.opponent);

  const result = window.engine.simulateMatch(playerA, playerB, logger);
  State.variables.htmlLog = logger.toHtml();
  State.variables.winner = result.winner.name;
  Engine.play(State.passage);
};

window.generateOpponent = function(total) {
  const stats = ["technique", "mind", "physique", "emotion"];
  const opp = { name: "Бот " + Math.floor(Math.random()*1000), serve: 4 };
  let remaining = total;
  for (let i = 0; i < stats.length; i++) {
    const max = remaining - (stats.length - i - 1);
    const val = i === stats.length - 1 ? remaining : 1 + Math.floor(Math.random()*max);
    opp[stats[i]] = val;
    remaining -= val;
  }
  return opp;
};

$(document).on("input", "input[type=number]", function () {
  const min = 1;
  const max = 10;
  const val = parseInt(this.value, 10);
  if (!isNaN(val)) {
    if (val < min) this.value = min;
    if (val > max) this.value = max;
  }
});


:: Story Stylesheet [stylesheet]
.layout {
  display: flex;
  gap: 20px;
}
.config {
  flex: 0 0 400px;
}
.output {
  flex: 1;
}
.inputs td:first-child {
  padding-right: 10px;
  text-align: right;
}
.inputs input[type="text"],
.inputs input[type="number"] {
  box-sizing: border-box;
  width: 7ch;
  font-family: inherit;
  font-size: inherit;
  padding: 0.2em 0.4em;
  line-height: 1.2;
  min-width: 0 !important;
}
.players {
  display: flex;
  gap: 20px;
}
.player {
  flex: 1;
}
.checks label {
  display: inline-block;
  margin-right: 10px;
}

